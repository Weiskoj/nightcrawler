Create namespace:
    Command: `kubectl create namespace interview`
    Output: `namespace/interview created`

Create nginx pod:
    
    INFO: pod yaml file is located at /nightcrawler/nginx-pod.yaml. Cat command is shown below
            
            `
            #FROM https://kubernetes.io/docs/concepts/workloads/pods/
            apiVersion: v1
            kind: Pod
            metadata:
            name: nginx
            spec:
            containers:
            - name: nginx
                image: nginx:latest
                ports:
                - containerPort: 80
            `

    Command: `kubectl apply -f nginx-pod.yaml -n interview`
    Output:  `pod/nginx created`

Show Pod Logs:
    Command: `kubectl logs -f nginx -n interview`
    Output:
        `/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
        /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
        /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
        10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
        10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
        /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
        /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
        /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
        /docker-entrypoint.sh: Configuration complete; ready for start up
        2025/05/24 00:15:11 [notice] 1#1: using the "epoll" event method
        2025/05/24 00:15:11 [notice] 1#1: nginx/1.27.5
        2025/05/24 00:15:11 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
        2025/05/24 00:15:11 [notice] 1#1: OS: Linux 6.12.10-76061203-generic
        2025/05/24 00:15:11 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
        2025/05/24 00:15:11 [notice] 1#1: start worker processes
        2025/05/24 00:15:11 [notice] 1#1: start worker process 29
        2025/05/24 00:15:11 [notice] 1#1: start worker process 30
        2025/05/24 00:15:11 [notice] 1#1: start worker process 31
        2025/05/24 00:15:11 [notice] 1#1: start worker process 32
        2025/05/24 00:15:11 [notice] 1#1: start worker process 33
        2025/05/24 00:15:11 [notice] 1#1: start worker process 34
        2025/05/24 00:15:11 [notice] 1#1: start worker process 35
        2025/05/24 00:15:11 [notice] 1#1: start worker process 36
        2025/05/24 00:15:11 [notice] 1#1: start worker process 37
        2025/05/24 00:15:11 [notice] 1#1: start worker process 38
        2025/05/24 00:15:11 [notice] 1#1: start worker process 39
        2025/05/24 00:15:11 [notice] 1#1: start worker process 40
        2025/05/24 00:15:11 [notice] 1#1: start worker process 41
        2025/05/24 00:15:11 [notice] 1#1: start worker process 42
        2025/05/24 00:15:11 [notice] 1#1: start worker process 43
        2025/05/24 00:15:11 [notice] 1#1: start worker process 44
        2025/05/24 00:15:11 [notice] 1#1: start worker process 45
        2025/05/24 00:15:11 [notice] 1#1: start worker process 46
        2025/05/24 00:15:11 [notice] 1#1: start worker process 47
        2025/05/24 00:15:11 [notice] 1#1: start worker process 48
        `

Create httpd deployment:
    Command: `kubectl apply -f httpd-imperitave-deployment.yaml -n interview`
    Output: `deployment.apps/httpd created`

Create Init container:
    Command: `kubectl apply -f httpd-imperitave-deployment.yaml -n interview`
    Output: 'deployment.apps/httpd configured'

    INFO: deployment yaml file is located at /nightcrawler/httpd-imperitave-deployment.yaml. Cat command output is shown below

        `
        # MATERIALS REFERENCED
        # USED https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
        # USED https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
        # USED https://hub.docker.com/_/httpd
        # USED https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-initialization/
        # USED https://hub.docker.com/_/python

        apiVersion: apps/v1
        kind: Deployment
        metadata:
        name: httpd
        labels:
            app: httpd
        spec:
        replicas: 1
        selector:
            matchLabels: 
            app: httpd
        template:
            metadata:
            labels: 
                app: httpd
            spec:
            initContainers:
            - name: python-init
                image: python:3.13-bookworm
                command: ["python3","-c", "print('hello world')"]
            containers:
            - name: httpd
                image: httpd:latest
                ports:
                - containerPort: 80
        `
